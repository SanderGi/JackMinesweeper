function Grid.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
call Grid.initData 1
pop temp 0
push pointer 0
push argument 2
call Grid.initMines 2
pop temp 0
push pointer 0
call Grid.initNeighborMines 1
pop temp 0
push pointer 0
return
function Grid.initData 3
push argument 0
pop pointer 0
push this 0
call Array.new 1
pop this 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push this 1
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push local 1
push constant 16
call Math.multiply 2
push local 0
push constant 16
call Math.multiply 2
push constant 16
add
call Cell.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.initMines 4
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push constant 2023
call Random.random 1
pop local 1
push constant 0
push this 0
push constant 1
sub
push local 1
call Main.constrain 3
pop local 1
push constant 1011
call Random.random 1
pop local 2
push constant 0
push this 1
push constant 1
sub
push local 2
call Main.constrain 3
pop local 2
push pointer 0
push local 1
push local 2
call Grid.get 3
pop local 3
push local 3
call Cell.getMine 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 0
not
call Cell.setMine 2
pop temp 0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.initNeighborMines 4
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Grid.get 3
pop local 2
push pointer 0
push local 0
push local 1
call Grid.calcNeighbors 3
pop local 3
push local 2
push local 3
call Cell.setNeighborMines 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.calcNeighbors 6
push argument 0
pop pointer 0
push constant 1
neg
pop local 3
label WHILE_EXP0
push local 3
push constant 2
lt
not
if-goto WHILE_END0
push argument 1
push local 3
add
pop local 5
push constant 0
push this 0
push constant 1
sub
push local 5
call Main.withinBounds 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
pop local 2
label WHILE_EXP1
push local 2
push constant 2
lt
not
if-goto WHILE_END1
push argument 2
push local 2
add
pop local 4
push constant 0
push this 1
push constant 1
sub
push local 4
call Main.withinBounds 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 5
push local 4
call Grid.get 3
pop local 1
push local 1
call Cell.getMine 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 1
add
pop local 0
label IF_FALSE2
label IF_FALSE1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Grid.reveal 4
push argument 0
pop pointer 0
push constant 0
not
pop local 3
label WHILE_EXP0
push local 3
not
if-goto WHILE_END0
push constant 0
pop local 3
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 0
lt
not
if-goto WHILE_END1
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push this 1
lt
not
if-goto WHILE_END2
push pointer 0
push local 1
push local 2
call Grid.get 3
pop local 0
push local 0
call Cell.getVisited 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Cell.getRevealed 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Cell.getNeighborMines 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 3
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push constant 0
push this 0
push constant 1
sub
push local 1
push constant 1
sub
call Main.constrain 3
push constant 0
push this 1
push constant 1
sub
push local 2
push constant 1
sub
call Main.constrain 3
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push local 1
push constant 0
push this 1
push constant 1
sub
push local 2
push constant 1
sub
call Main.constrain 3
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push constant 0
push this 0
push constant 1
sub
push local 1
push constant 1
sub
call Main.constrain 3
push local 2
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push constant 0
push this 0
push constant 1
sub
push local 1
push constant 1
sub
call Main.constrain 3
push constant 0
push this 1
push constant 1
sub
push local 2
push constant 1
add
call Main.constrain 3
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push constant 0
push this 0
push constant 1
sub
push local 1
push constant 1
add
call Main.constrain 3
push constant 0
push this 1
push constant 1
sub
push local 2
push constant 1
sub
call Main.constrain 3
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push constant 0
push this 0
push constant 1
sub
push local 1
push constant 1
add
call Main.constrain 3
push local 2
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push local 1
push constant 0
push this 1
push constant 1
sub
push local 2
push constant 1
add
call Main.constrain 3
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
push pointer 0
push constant 0
push this 0
push constant 1
sub
push local 1
push constant 1
add
call Main.constrain 3
push constant 0
push this 1
push constant 1
sub
push local 2
push constant 1
add
call Main.constrain 3
call Grid.get 3
pop local 0
push local 0
push constant 0
not
call Cell.setRevealed 2
pop temp 0
push local 0
call Cell.show 1
pop temp 0
goto IF_END2
label IF_FALSE2
push local 0
push constant 0
not
call Cell.setVisited 2
pop temp 0
label IF_END2
label IF_FALSE1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.show 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Grid.get 3
pop local 2
push local 2
call Cell.show 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.get 2
push argument 0
pop pointer 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
return
function Grid.dispose 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Grid.get 3
pop local 2
push local 2
call Cell.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 2
add
pop pointer 1
push that 0
call Memory.deAlloc 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
call Memory.deAlloc 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
